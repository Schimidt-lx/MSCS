<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.ScrapProductMapper">
    
    <resultMap type="ScrapProduct" id="ScrapProductResult">
        <result property="ID"    column="ID"    />
        <result property="name"    column="name"    />
        <result property="in price"    column="in price"    />
        <result property="num"    column="num"    />
        <result property="reason"    column="reason"    />
        <result property="amout of loss"    column="amout of loss"    />
    </resultMap>

    <sql id="selectScrapProductVo">
        select ID, name, in price, num, reason, amout of loss from ScrapProduct
    </sql>

    <select id="selectScrapProductList" parameterType="ScrapProduct" resultMap="ScrapProductResult">
        <include refid="selectScrapProductVo"/>
        <where>  
            <if test="ID != null  and ID != ''"> and ID = #{ID}</if>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="in price != null "> and in price = #{in price}</if>
            <if test="num != null  and num != ''"> and num = #{num}</if>
            <if test="reason != null  and reason != ''"> and reason = #{reason}</if>
            <if test="amout of loss != null "> and amout of loss = #{amout of loss}</if>
        </where>
    </select>
    
    <select id="selectScrapProductById" parameterType="String" resultMap="ScrapProductResult">
        <include refid="selectScrapProductVo"/>
        where ID = #{ID}
    </select>
        
    <insert id="insertScrapProduct" parameterType="ScrapProduct">
        insert into ScrapProduct
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="ID != null">ID,</if>
            <if test="name != null and name != ''">name,</if>
            <if test="in price != null">in price,</if>
            <if test="num != null and num != ''">num,</if>
            <if test="reason != null and reason != ''">reason,</if>
            <if test="amout of loss != null">amout of loss,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="ID != null">#{ID},</if>
            <if test="name != null and name != ''">#{name},</if>
            <if test="in price != null">#{in price},</if>
            <if test="num != null and num != ''">#{num},</if>
            <if test="reason != null and reason != ''">#{reason},</if>
            <if test="amout of loss != null">#{amout of loss},</if>
         </trim>
    </insert>

    <update id="updateScrapProduct" parameterType="ScrapProduct">
        update ScrapProduct
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="in price != null">in price = #{in price},</if>
            <if test="num != null and num != ''">num = #{num},</if>
            <if test="reason != null and reason != ''">reason = #{reason},</if>
            <if test="amout of loss != null">amout of loss = #{amout of loss},</if>
        </trim>
        where ID = #{ID}
    </update>

    <delete id="deleteScrapProductById" parameterType="String">
        delete from ScrapProduct where ID = #{ID}
    </delete>

    <delete id="deleteScrapProductByIds" parameterType="String">
        delete from ScrapProduct where ID in 
        <foreach item="ID" collection="array" open="(" separator="," close=")">
            #{ID}
        </foreach>
    </delete>

</mapper>